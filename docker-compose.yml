# to launch production docker compose, run
#   docker-compose up -d
#
# To launch a development environment, run
#   docker-compose up -d
# and
#  npm run client
#
version: "3.4"

services:
  server:
    build:
      context: .
      dockerfile: server.Dockerfile
    container_name: flink-packages-server
    environment:
      MYSQL_HOST: database
      MYSQL_USER: flink_ecosystem
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: flink_ecosystem
      SITE_DOMAIN: ${SITE_DOMAIN}
      GITHUB_CLIENT: ${GITHUB_CLIENT}
      GITHUB_SECRET: ${GITHUB_SECRET}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      EMAIL_TO_ADDRESS: ${EMAIL_TO_ADDRESS}
      EMAIL_SERVICE_CLIENT: ${EMAIL_SERVICE_CLIENT}
      EMAIL_PRIVATE_KEY: ${EMAIL_PRIVATE_KEY}
      NODE_ENV: production
      NODE_PATH: src/
    ports:
      - "4000:4000"
    volumes:
      - ./public:/node/public:ro
      - ./src/server:/node/src/server:ro
    command: npm run server

  database:
    image: mariadb:10
    container_name: mariadb-server
    environment:
      MYSQL_USER: flink_ecosystem
      MYSQL_PASSWORD: test
      MYSQL_DATABASE: flink_ecosystem
      MYSQL_ALLOW_EMPTY_PASSWORD: "true"
    volumes:
      - ./src/server/sql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./src/server/sql/fixtures.sql.gz:/docker-entrypoint-initdb.d/02-fixtures.sql.gz:ro
      - mariadb-data:/var/lib/mysql:rw
    ports:
      - "3306:3306"
      
volumes:
  mariadb-data:
